{"version":3,"sources":["features/userSlice.js","HeaderOption.js","firebase.js","Header.js","Sidebar.js","InputOption.js","Post.js","Feed.js","Login.js","Widgets.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","HeaderOption","avatar","Icon","title","onClick","useSelector","className","Avatar","src","photoUrl","email","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","Header","props","dispatch","useDispatch","alt","placeholder","type","HomeIcon","SupervisorAccountIcon","BusinessCenterIcon","CommentIcon","NotificationsIcon","signOut","Sidebar","recentItem","topic","displayName","InputOption","color","style","Post","forwardRef","ref","description","message","ThumbUpAltOutlinedIcon","ChatOutlinedIcon","ShareOutlinedIcon","SendOutlinedIcon","Feed","useState","input","setInput","posts","setPosts","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","value","onChange","e","target","preventDefault","add","pgotoUrl","timestamp","FieldValue","serverTimestamp","ImageIcon","SubscriptionsIcon","EventNoteIcon","CalendarViewDayIcon","Login","setEmail","password","setPassword","setName","profilePic","setProfilePic","signInWithEmailAndPassword","then","userAuth","uid","profileUrl","photoURL","catch","error","alert","createUserWithEmailAndPassword","updateProfile","Widgets","newsArticle","heading","subtitle","App","onAuthStateChanged","configureStore","reducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.064b713e.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState: {\r\n    user: null,\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n    logout: (state) => {\r\n      state.user = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout } = userSlice.actions;\r\n\r\n//selector\r\nexport const selectUser = (state) => state.user.user;\r\n\r\nexport default userSlice.reducer;\r\n ","import React from 'react';\r\nimport './HeaderOption.css';\r\nimport {Avatar} from '@material-ui/core';\r\nimport { selectUser } from './features/userSlice';\r\nimport {useSelector} from 'react-redux';\r\n\r\n// 解構賦值 從陣列或物件中取值\r\nfunction HeaderOption({avatar, Icon, title, onClick}) {\r\n    const user = useSelector(selectUser);\r\n\r\n    return (\r\n        <div onClick={onClick} className=\"headerOption\">\r\n            {Icon && <Icon className=\"headerOption_icon\" />}\r\n            {/* material UI  有提供Avatar製作，src為圖片位置 */}\r\n            {avatar && <Avatar className=\"headerOption_icon\" src={user?.photoUrl}>\r\n                 {user?.email[0]}\r\n                </Avatar>}\r\n            \r\n            <h3 className=\"headerOption_title\">{title}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeaderOption\r\n","import firebase from 'firebase'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyB1rzsVtHyJioJVIhQX-Lq9VAT_0rOZ_ks\",\r\n    authDomain: \"linkedinclone-69d8b.firebaseapp.com\",\r\n    projectId: \"linkedinclone-69d8b\",\r\n    storageBucket: \"linkedinclone-69d8b.appspot.com\",\r\n    messagingSenderId: \"629493630683\",\r\n    appId: \"1:629493630683:web:499fef49b471ed1ce86efe\"\r\n  };\r\n\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n  const db = firebaseApp.firestore();\r\n  const auth = firebase.auth();\r\n\r\n  export {db, auth};","import React from 'react';\r\nimport './Header.css';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport HeaderOption from './HeaderOption';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport BusinessCenterIcon from '@material-ui/icons/BusinessCenter';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { logout, selectUser } from './features/userSlice';\r\nimport { auth } from './firebase';\r\n\r\nfunction Header(props) {\r\n    const user = useSelector(selectUser);\r\n    const dispatch = useDispatch();\r\n    const logoutOfApp = () => {\r\n        dispatch(logout())\r\n        auth.signOut();\r\n    };\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            {/* Icon & Search */}\r\n            <div className=\"header_left\">\r\n                <img src=\"https://www.flaticon.com/svg/static/icons/svg/174/174857.svg\" \r\n                alt=\"\"/>\r\n                \r\n                <div className=\"header_search\">\r\n                    <SearchIcon/>\r\n                    <input placeholder=\"搜尋\" type=\"text\"/>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Some social icons */}\r\n            <div className=\"header_right\">\r\n                {/* 重複元素，新建component */}\r\n                <HeaderOption Icon={HomeIcon} title=\"首頁\" />\r\n                <HeaderOption Icon={SupervisorAccountIcon} title=\"人脈\" />\r\n                <HeaderOption Icon={BusinessCenterIcon} title=\"職缺\" />\r\n                <HeaderOption Icon={CommentIcon} title=\"訊息\" />\r\n                <HeaderOption Icon={NotificationsIcon} title=\"通知\" />\r\n                <HeaderOption avatar={true} onClick={logoutOfApp} title=\"我\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n\r\n// 頭像\r\n// https://inews.gtimg.com/newsapp_bt/0/9664898940/641","import { Avatar } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { selectUser } from './features/userSlice';\r\nimport {useSelector} from 'react-redux';\r\nimport \"./Sidebar.css\";\r\n\r\nfunction Sidebar() {\r\n    const user = useSelector(selectUser);\r\n\r\n    const recentItem = (topic) => (\r\n        <div className=\"sidebar_recentItem\">\r\n            <span className=\"sidebar_hash\">#</span>\r\n            <p>{topic}</p>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar_top\">\r\n                <img src=\"https://images.pexels.com/photos/531880/pexels-photo-531880.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\" alt=\"\"/>\r\n                <Avatar src={user.photoUrl} className=\"sidebar_avatar\">\r\n                    {user.email[0]}\r\n                </Avatar>\r\n                <h2>{user.displayName}</h2>\r\n                <h4>{user.email}</h4>\r\n            </div>\r\n\r\n            <div className=\"sidebar_stats\">\r\n                <div className=\"sidebar_stat\">\r\n                    <p>誰關注你</p>\r\n                    <p className=\"sidebar_statNumber\">1,00</p>\r\n                </div>\r\n                <div className=\"sidebar_stat\">\r\n                    <p>我的貼文</p>\r\n                    <p className=\"sidebar_statNumber\">50</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"sidebar_botton\">\r\n                <p>最近</p>\r\n                {recentItem('reactjs')}\r\n                {recentItem('CSS')}\r\n                {recentItem('軟體工程師')}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react';\r\nimport './InputOption.css';\r\n\r\nfunction InputOption({Icon, title, color}) {\r\n    return (\r\n        <div className=\"inputoption\">\r\n            <Icon style={{color: color}}/>\r\n            <h4>{title}</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputOption\r\n","import { Avatar } from '@material-ui/core';\r\nimport React, {forwardRef} from 'react';\r\nimport './Post.css';\r\nimport ThumbUpAltOutlinedIcon from '@material-ui/icons/ThumbUpAltOutlined';\r\nimport InputOption from './InputOption';\r\nimport ChatOutlinedIcon from '@material-ui/icons/ChatOutlined';\r\nimport ShareOutlinedIcon from '@material-ui/icons/ShareOutlined';\r\nimport SendOutlinedIcon from '@material-ui/icons/SendOutlined';\r\n\r\nconst Post = forwardRef(({name, description, message, photoUrl}, ref) => {\r\n    return (\r\n        <div ref={ref} className=\"post\">\r\n            <div className=\"post_header\">\r\n                <Avatar src={photoUrl}>{name[0]}</Avatar>\r\n                <div className=\"post_info\">\r\n                    <h2>{name}</h2>\r\n                    <p>{description}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"post_body\">\r\n                <p>{message}</p>\r\n            </div>\r\n\r\n            <div className=\"post_buttons\">\r\n                <InputOption Icon={ThumbUpAltOutlinedIcon} title='讚' color='gray'/>\r\n                <InputOption Icon={ChatOutlinedIcon} title='回應' color='gray'/>\r\n                <InputOption Icon={ShareOutlinedIcon} title='分享' color='gray'/>\r\n                <InputOption Icon={SendOutlinedIcon} title='傳送' color='gray'/>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Post\r\n","import React, {useState, useEffect} from 'react';\r\nimport './Feed.css';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport InputOption from './InputOption';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport SubscriptionsIcon from '@material-ui/icons/Subscriptions';\r\nimport EventNoteIcon from '@material-ui/icons/EventNote';\r\nimport CalendarViewDayIcon from '@material-ui/icons/CalendarViewDay';\r\nimport Post from './Post';\r\nimport { db } from './firebase';\r\nimport firebase from 'firebase';\r\nimport { selectUser } from './features/userSlice';\r\nimport {useSelector} from 'react-redux';\r\nimport FlipMove from 'react-flip-move';\r\n\r\nfunction Feed() {\r\n    const user = useSelector(selectUser);\r\n    const [input, setInput] = useState('');\r\n    const [posts, setPosts] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        db.collection(\"posts\").orderBy(\"timestamp\", \"desc\").onSnapshot(snapshot => (\r\n            setPosts(snapshot.docs.map(doc => (\r\n                {\r\n                    id: doc.id,\r\n                    data: doc.data(),\r\n                }\r\n            )))\r\n        ))\r\n    }, []);\r\n\r\n    const sendPost = e => {\r\n        e.preventDefault();\r\n\r\n        db.collection('posts').add({\r\n            name: user.displayName,\r\n            description: user.email,\r\n            message: input,\r\n            pgotoUrl: user.photoUrl || \"\",\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        });\r\n        setInput(\"\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"feed\">\r\n            <div className=\"feed_inputContainer\">\r\n                <div className=\"feed_input\">\r\n                    <CreateIcon  />\r\n                    <form action=\"\">\r\n                        <input value={input} onChange={e => setInput(e.target.value)} type=\"text\"/>\r\n                        <button onClick={sendPost} type=\"submit\">送出</button>\r\n                    </form>\r\n                </div>\r\n                <div className=\"feed_inputOptions\">\r\n                    <InputOption Icon={ImageIcon} title='照片' color=\"#70B5F9\" />\r\n                    <InputOption Icon={SubscriptionsIcon} title='影片' color=\"#E7A33E\" />\r\n                    <InputOption Icon={EventNoteIcon} title='活動' color=\"#C0CBCD\" />\r\n                    <InputOption Icon={CalendarViewDayIcon} title='撰寫文章' color=\"#7FC15E\" />\r\n                </div>\r\n            </div>\r\n\r\n            {/* Posts */}\r\n            <FlipMove>\r\n                {posts.map( ({id, data:{name, description, message, photoUrl}}) => (\r\n                    <Post key={id} name={name} description={description} message={message} photoUrl={photoUrl} />\r\n                ))}\r\n            </FlipMove>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feed\r\n","import React, {useState} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport { auth } from './firebase';\r\nimport './Login.css'\r\nimport {login} from './features/userSlice';\r\n\r\nfunction Login() {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [profilePic, setProfilePic] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n\r\n    const register = () => {\r\n        if(!name) {\r\n            return alert(\"請輸入姓名\");\r\n        }\r\n\r\n        auth.createUserWithEmailAndPassword(email, password)\r\n            .then((userAuth) => {\r\n                userAuth.user.updateProfile({\r\n                    displayName: name,\r\n                    photoURL: profilePic, \r\n                })\r\n                .then(() => {\r\n                    dispatch(login({\r\n                        email: userAuth.user.email,\r\n                        uid: userAuth.user.uid,\r\n                        displayName: name,\r\n                        photoUrl: profilePic\r\n                    }))\r\n                })\r\n            }).catch(error => alert(error));\r\n    };\r\n    const loginToApp = (e) => {\r\n        e.preventDefault();\r\n\r\n        auth.signInWithEmailAndPassword(email, password)\r\n            .then(userAuth => {\r\n                dispatch(login({\r\n                    email:userAuth.user.email,\r\n                    uid: userAuth.user.uid,\r\n                    displayName: userAuth.user.displayName,\r\n                    profileUrl: userAuth.user.photoURL,\r\n                }))\r\n            }).catch(error=>alert(error));\r\n    };\r\n    return (\r\n        <div className=\"login\">\r\n            <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/01/LinkedIn_Logo.svg/1200px-LinkedIn_Logo.svg.png\" alt=\"\"/>\r\n        \r\n            <form action=\"\">\r\n                <input value={name} onChange={(e)=>setName(e.target.value)} placeholder=\"姓名(必填)\" type=\"text\"/>\r\n                <input value={profilePic} onChange={(e)=>setProfilePic(e.target.value)} placeholder=\"個人照片(url)\" type=\"text\"/>\r\n                <input value={email} onChange={(e)=>setEmail(e.target.value)} placeholder=\"Email\" type=\"email\"/>\r\n                <input value={password} onChange={(e)=>setPassword(e.target.value)} placeholder=\"密碼\" type=\"password\"/>\r\n                <button type=\"submit\" onClick={loginToApp}>登入</button>\r\n            </form>\r\n\r\n            <p>剛加入 LinkedIn 嗎？<span className=\"login_register\" onClick={register}>立即加入</span></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n\r\n","import React from 'react';\r\nimport './Widgets.css';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\n\r\nfunction Widgets() {\r\n\r\n    const newsArticle = (heading, subtitle) => (\r\n        <div className=\"widgets_article\">\r\n            <div className=\"widgets_articleLeft\">\r\n                <FiberManualRecordIcon/>\r\n            </div>\r\n            <div className=\"widgets_articleRight\">\r\n                <h4>{heading}</h4>\r\n                <p>{subtitle}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div className=\"widgets\">\r\n            <div className=\"widgets_header\">\r\n                <h2>Linkedin News</h2>\r\n                <InfoIcon/>\r\n            </div>\r\n            {newsArticle(\"Reactjs\", \"123qwe\")}\r\n            {newsArticle(\"Redux\", \"456qwe\")}\r\n            {newsArticle(\"CSS\", \"789qwe\")}\r\n            {newsArticle(\"Reactjs\", \"123qwe\")}\r\n            {newsArticle(\"Redux\", \"456qwe\")}\r\n            {newsArticle(\"CSS\", \"789qwe\")}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Widgets\r\n","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport Header from './Header';\r\nimport Sidebar from './Sidebar';\r\nimport Feed from './Feed';\r\nimport {login, logout, selectUser} from './features/userSlice';\r\nimport Login from './Login';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport { auth } from './firebase';\r\nimport Widgets from './Widgets';\r\n\r\nfunction App() {\r\n\r\n  const user = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged(userAuth => {\r\n      if(userAuth) {\r\n        // user is logged in\r\n        dispatch(login({\r\n          email: userAuth.email,\r\n          uid: userAuth.uid,\r\n          displayName: userAuth.displayName,\r\n          photoUrl: userAuth.photoURL,\r\n        }))\r\n      }else {\r\n        // user is logged out\r\n        dispatch(logout());\r\n      }\r\n    })\r\n  },[])\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {/* Header */}\r\n      <Header />\r\n      {!user ? (<Login />) : (\r\n        <div className=\"app_body\">\r\n          {/* Sidebar */}\r\n          <Sidebar  />\r\n          {/* Feed */}\r\n          <Feed  />\r\n          {/* Widgets */}\r\n          <Widgets/>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport userReducer from '../features/userSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n  },\r\n});\r\n ","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}